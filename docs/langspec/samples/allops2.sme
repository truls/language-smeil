// Allops smeil example

clocked proc producer (const num1, const num2)
        bus outbus {
            data1: u32;
            data2: u32;
        };
{
        outbus.data1 <= num2;
        outbus.data2 <= num2;
}

clocked proc add ()
{
        sink.inbus.add = producer.outbus.data1 + producer.outbus.data2;
}

clocked proc div ()
{
        sink.inbus.div = producer.outbus.data1 + producer.outbus.data2;
}

clocked proc mul ()
{
        sink.inbus.mul = prodcuer.outbus.data1 + producer.outbus.data2;
}

clocked proc sub ()
{
        sink.inbus.sub = producer.outbus.data1 - producer.outbus.data2;
}

clocked proc sink (out result)
        bus inbus {
            add: u32 = 0;
            mod: u32 = 0;
            mul: u32 = 0;
            div: u32 = 0;
        };
{
        result.agg = input.add + input.div + input.mul + input.
}

network all_ops (out result) {

        bus result {
            agg: i32;
        }

        instance producer (num1: 4, num2: 9);
        instance add ();
        instance div ();
        instance mul ();
        instance sub ();
        instance sink (result: result);

}