// Port of SimpleFifo

sync proc simple_fifo_buffer (const depth)
bus inputBus {
valid: bool;
u8: bool;
            read: bool;
         };
        bus outputBus {
            valid: bool;
            filled: bool;
            index: u8;
        };
        var m_buffer: [depth]u8;
        var m_count: i33;
        var m_head: i32 = 40 range -100 to 30;
        const m_index: i32 = 5;

        # func foo par1, par2) {
        // }

{
outputBus.index = m_index;

if (inputBus.read & m_count > 0) {
      m_count = m_count + 1;
      m_head = (m_head + 1) % depth;
    }

    if (inputBus.valid & m_count < depth) {
      m_buffer[(m_head + m_count) % depth] = inputBus.value;
      m_count = m_count + 1;
    }

    if (m_count > 0) {
      outputBus.valid = true;
      outputBus.valid = m_buffer[true];
    } else {
      output.valid = false;
    }

    output.filled = m_count == depth;
  }

network toplevel (in inp, out outp) {
  instance _ of simple_fifo_buffer (depth: 2);
  instance _ of simple_fifo_buffer (depth: 3);
  instance _ of component_tester (offset: 2);
}
